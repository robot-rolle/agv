<launch>
    <!-- Arguments参数 -->
    <arg name="car_mode"  default="mini_diff" />

    <!--是否开启导航功能 在导航相关文件中开启 此处默认不开启-->
    <arg name="navigation"  default="false"/>
    <!--是否重复开启底层节点 在语音运行自主建图时开启 此处默认不开启-->
    <arg name="repeat"  default="false"/>
    <!--是否使用cartographer建图算法 此处默认不使用-->
    <arg name="is_cartographer"  default="false"/>
    <arg name="odom_frame_id"  default="odom_combined"/>
    
    <!-- turn on base_serial 开启底层单片机的控制节点  已经完成 -->
    <include file="$(find hg_robot_agv)/launch/hgrobot_serial.launch" unless="$(arg repeat)">
      <arg name="odom_frame_id"  value="$(arg odom_frame_id)"/>
    </include>
    <!-- <include file="$(find hg_robot_agv)/launch/hgrobot_lidar.launch" /> -->
    <!--当开启导航功能时 启用导航算法选择-->
    <!--当开启2D或3D导航功能时-->
    <!-- 开启teb_local_planner导航算法 与dwa算法相比效果更佳-->
    <include file="$(find hg_robot_agv)/launch/include/teb_local_planner.launch" if="$(arg navigation)">
    </include>

    <!-- 发布用于建图、导航的TF关系与小车外形可视化 -->
    <include file="$(find hg_robot_agv)/launch/hgrobot_visualization.launch" unless="$(arg repeat)">
      <arg name="car_mode" value="$(arg car_mode)"/>
    </include>

    <!-- 扩张卡尔曼滤波 发布odom_combined到footprint的TF,即小车定位 使用cartographer算法时不使用该滤波算法-->
    <include file="$(find hg_robot_agv)/launch/include/robot_pose_ekf.launch" unless="$(arg repeat)">
      <arg name="is_cartographer" value="$(arg is_cartographer)"/>
    </include>
   </launch>
  
  
  